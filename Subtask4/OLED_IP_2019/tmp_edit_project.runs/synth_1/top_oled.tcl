# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
create_project -in_memory -part xc7z020clg484-1

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_property webtalk.parent_dir /home/consti/Downloads/Updated_OLED_IP/tmp_edit_project.cache/wt [current_project]
set_property parent.project_path /home/consti/Downloads/Updated_OLED_IP/tmp_edit_project.xpr [current_project]
set_property XPM_LIBRARIES XPM_MEMORY [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language VHDL [current_project]
set_property board_part em.avnet.com:zed:part0:1.3 [current_project]
set_property ip_repo_paths ../../Users/sschwing/Documents/es_in_FPGA/OLED/OLED.srcs [current_project]
update_ip_catalog
set_property ip_output_repo /home/consti/Downloads/Updated_OLED_IP/tmp_edit_project.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
add_files /home/consti/Downloads/Updated_OLED_IP/src/init_sequence.coe
add_files /home/consti/Downloads/Updated_OLED_IP/src/characterLib.coe
read_mem {
  /home/consti/Downloads/Updated_OLED_IP/src/init_sequence_rom.mif
  /home/consti/Downloads/Updated_OLED_IP/src/charLib.mif
}
read_verilog -library xil_defaultlib {
  /home/consti/Downloads/Updated_OLED_IP/src/OLEDCtrl.v
  /home/consti/Downloads/Updated_OLED_IP/src/SpiCtrl.v
  /home/consti/Downloads/Updated_OLED_IP/src/delay_ms.v
}
read_vhdl -library blk_mem_gen_v8_4_1 /home/consti/Downloads/Updated_OLED_IP/src/blk_mem_gen_v8_4_1/blk_mem_gen_v8_4_vhsyn_rfs.vhd
read_vhdl -library xil_defaultlib {
  /home/consti/Downloads/Updated_OLED_IP/src/charLib.vhd
  /home/consti/Downloads/Updated_OLED_IP/src/init_sequence_rom.vhd
  /home/consti/Downloads/Updated_OLED_IP/src/pixel_buffer.vhd
  /home/consti/Downloads/Updated_OLED_IP/src/top_oled.vhd
}
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
read_xdc -mode out_of_context /home/consti/Downloads/Updated_OLED_IP/src/init_sequence_rom_ooc.xdc
set_property used_in_implementation false [get_files /home/consti/Downloads/Updated_OLED_IP/src/init_sequence_rom_ooc.xdc]

read_xdc -mode out_of_context /home/consti/Downloads/Updated_OLED_IP/src/pixel_buffer_ooc.xdc
set_property used_in_implementation false [get_files /home/consti/Downloads/Updated_OLED_IP/src/pixel_buffer_ooc.xdc]

read_xdc -mode out_of_context /home/consti/Downloads/Updated_OLED_IP/src/charLib_ooc.xdc
set_property used_in_implementation false [get_files /home/consti/Downloads/Updated_OLED_IP/src/charLib_ooc.xdc]

read_xdc /home/consti/Downloads/Updated_OLED_IP/src/zedboard_master.xdc
set_property used_in_implementation false [get_files /home/consti/Downloads/Updated_OLED_IP/src/zedboard_master.xdc]

set_param ips.enableIPCacheLiteLoad 1
close [open __synthesis_is_running__ w]

synth_design -top top_oled -part xc7z020clg484-1


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef top_oled.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file top_oled_utilization_synth.rpt -pb top_oled_utilization_synth.pb"
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
